{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#waldiez-runner","title":"Waldiez Runner","text":"<p>Waldiez Runner is a server that executes Waldiez flows in isolated environments (Python virtualenvs or containers), streams logs and input/output over Redis, and provides a full API for managing tasks and clients.</p> <p>Built with:</p> <ul> <li>Waldiez + ag2 + FastStream for isolated flow execution and streaming</li> <li>FastAPI for the API</li> <li>Taskiq for async task management</li> <li>Redis for message and log streaming</li> <li>PostgreSQL for task/client persistence</li> </ul> <p> </p>"},{"location":"#features","title":"\ud83d\ude80 Features","text":"<ul> <li>Push-to-execute agent/task flows via HTTP</li> <li>Live I/O and user interaction over WebSocket or HTTP</li> <li>Multi-audience token-based authentication</li> <li>Local or containerized dev setups</li> <li>Easily extensible for S3/GCS, OIDC, hybrid queueing, and more</li> </ul> <p>\ud83d\udc49 Head over to Getting Started to run your first task!</p>"},{"location":"architecture/","title":"Architecture","text":""},{"location":"architecture/#architecture","title":"Architecture","text":"<p>Waldiez Runner orchestrates the execution of Waldiez flows in isolated environments (e.g. virtualenvs), with full support for live input/output streaming and task management via HTTP or WebSocket.</p> <p>It uses a modular architecture composed of:</p> Component Description FastAPI HTTP API for tasks, inputs, clients, and authentication Taskiq Asynchronous job runner (background task execution) FastStream Executes uploaded app in a new virtualenv Redis Handles message passing (logs, prompts, responses) PostgreSQL Persists task and client state WebSocket Real-time input/output interface for tasks"},{"location":"architecture/#system-overview","title":"System Overview","text":"<pre><code>graph TD\n  A[Client] --&gt;|HTTP| B[FastAPI]\n  A --&gt;|WebSocket| G[WebSocket Router]\n\n  B --&gt;|Enqueue Task| C[Taskiq Worker]\n  B --&gt;|Store Task| D[PostgreSQL]\n  B --&gt;|Save File| F[Storage]\n\n  C --&gt;|Run App| H[FastStream + Waldiez + Ag2]\n  C --&gt;|Update Status| D\n\n  H --&gt;|Input/Output + Status| E[Redis]\n\n  G --&gt;|Subscribe + Publish| E\n\n  subgraph Virtualenv\n    H\n  end\n\n  subgraph Dev Environment\n    B\n    C\n    G\n    D\n    E\n    F\n  end\n</code></pre>"},{"location":"architecture/#redis-io-and-status-channels","title":"Redis I/O and Status Channels","text":"<p>Tasks use <code>RedisIOStream</code> an extension to ag2's IOStream to stream logs and request input. This includes:</p> <ul> <li>Output:<ul> <li><code>task:{task_id}:output</code>: per-task stream</li> <li><code>task-output</code>: global stream for all task messages</li> </ul> </li> <li>Input:<ul> <li><code>task:{task_id}:input_request</code>: prompt user input</li> <li><code>task:{task_id}:input_response</code>: receive user reply</li> </ul> </li> <li>Control:<ul> <li>t<code>ask:{task_id}:status</code>: used by the runner to react to cancel requests and broadcast lifecycle events (running, completed, failed, etc.)</li> </ul> </li> </ul>"},{"location":"architecture/#execution-flow","title":"Execution Flow","text":"<p>The diagram below illustrates how the system handles a full task lifecycle \u2014 from submission to completion.</p> <pre><code>sequenceDiagram\n    participant Client\n    participant API\n    participant FastStream\n    participant TaskiqWorker\n    participant Redis\n    participant DB\n    participant Storage\n    participant WebSocket\n    participant AppInVenv\n\n    Client-&gt;&gt;API: POST /api/v1/tasks\n    API-&gt;&gt;DB: Create task\n    API-&gt;&gt;Storage: Save uploaded file\n    API-&gt;&gt;TaskiqWorker: Enqueue job\n\n    TaskiqWorker-&gt;&gt;Storage: Create venv and copy app files\n    TaskiqWorker-&gt;&gt;DB: Update task status to running\n    TaskiqWorker-&gt;&gt;AppInVenv: Start subprocess\n\n    loop Task execution\n        AppInVenv-&gt;&gt;FastStream: Publish input_request\n        FastStream-&gt;&gt;Redis: task:{task_id}:input_request\n\n        alt User responds\n            Redis--&gt;&gt;FastStream: task:{task_id}:input_response\n            FastStream--&gt;&gt;AppInVenv: Deliver input\n        else Timeout\n            AppInVenv--&gt;&gt;FastStream: Use default input\n        end\n\n        AppInVenv-&gt;&gt;FastStream: Publish output\n        FastStream-&gt;&gt;Redis: Stream to task:{task_id}:output and task-output\n    end\n\n    opt WebSocket\n        Client-&gt;&gt;WebSocket: Connect to /ws/{task_id}\n        WebSocket-&gt;&gt;Redis: Read from task:{task_id}:output\n        Redis--&gt;&gt;WebSocket: Forward output or input_request\n        Client--&gt;&gt;WebSocket: Send input\n        WebSocket-&gt;&gt;Redis: task:{task_id}:input_response\n    end\n\n    opt HTTP Input\n        Client-&gt;&gt;API: POST /api/v1/tasks/{task_id}/input\n        API-&gt;&gt;Redis: task:{task_id}:input_response\n    end\n\n    alt Task completes/fails/cancelled\n        TaskiqWorker-&gt;&gt;DB: Update task status\n        TaskiqWorker-&gt;&gt;Storage: Move results and clean up\n    end\n</code></pre>"},{"location":"clients/","title":"Clients & Authentication","text":""},{"location":"clients/#clients-authentication","title":"Clients &amp; Authentication","text":"<p>Waldiez Runner uses a client-based authentication system powered by JWT tokens. All interactions with the API or WebSocket require a valid token linked to a specific audience.</p>"},{"location":"clients/#audiences","title":"\ud83c\udfad Audiences","text":"<p>There are two types of clients, each associated with a specific audience:</p> Audience Description Scope <code>clients-api</code> Manages other clients <code>/api/v1/clients/*</code> <code>tasks-api</code> Submits and interacts with tasks <code>/api/v1/tasks/*</code>, <code>/ws/{task_id}</code>"},{"location":"clients/#clientsjson","title":"\ud83d\udcc2 <code>clients.json</code>","text":"<p>Upon first startup (or running <code>initial_data.py</code>), a file named <code>clients.json</code> is generated in the project root. It contains initial client credentials for both audiences.</p> <pre><code>[\n  {\n    \"id\": \"...\",\n    \"client_id\": \"...\",\n    \"client_secret\": \"...\",\n    \"audience\": \"clients-api\",\n    \"description\": \"Clients management API\"\n  },\n  {\n    \"id\": \"...\",\n    \"client_id\": \"...\",\n    \"client_secret\": \"...\",\n    \"audience\": \"tasks-api\",\n    \"description\": \"Tasks management API\"\n  }\n]\n</code></pre> <p>Note</p> <p>You\u2019ll need the tasks-api credentials to:</p> <ul> <li>Use the example UI at http://localhost</li> <li>Submit or manage tasks via Swagger or scripts</li> </ul>"},{"location":"clients/#token-endpoints","title":"\ud83d\udd10 Token Endpoints","text":"<p>You can request or refresh a token using the <code>/auth</code> routes.</p>"},{"location":"clients/#post-authtoken","title":"\ud83d\udd38 <code>POST /auth/token</code>","text":"<p>Request an access + refresh token.</p> <p>Form data (<code>application/x-www-form-urlencoded</code>):</p> <pre><code>client_id=...\nclient_secret=...\n</code></pre> <p>Example response:</p> <pre><code>{\n    \"access_token\": \"...\",\n    \"refresh_token\": \"...\",\n    \"token_type\": \"Bearer\",\n    \"expires_at\": \"...\",\n    \"refresh_expires_at\": \"...\",\n    \"audience\": \"tasks-api\"\n}\n</code></pre>"},{"location":"clients/#post-authrefresh","title":"\ud83d\udd04 <code>POST /auth/refresh</code>","text":"<p>Use your <code>refresh_token</code> to renew your tokens.</p> <p>JSON body:</p> <pre><code>{\n    \"refresh_token\": \"...\",\n    \"audience\": \"tasks-api\" // optional\n}\n</code></pre>"},{"location":"clients/#authenticating-requests","title":"\ud83d\udce1 Authenticating Requests","text":"<p>Pass the token in your <code>Authorization</code> header:</p> <pre><code>Authorization: Bearer &lt;access_token&gt;\n</code></pre> <p>This is required for:</p> <ul> <li>All <code>/api/v1/*</code> endpoints</li> <li>WebSocket access (<code>/ws/{task_id}</code>)</li> </ul>"},{"location":"clients/#websocket-authentication-options","title":"\ud83d\udd0c WebSocket Authentication Options","text":"<p>You can authenticate WebSocket connections via:</p> Method Example Use Case Header <code>Authorization: Bearer &lt;token&gt;</code> Best for Python clients Subprotocol <code>task-api,&lt;token&gt;</code> Recommended for JS Cookie <code>access_token=&lt;token&gt;</code> Used in browser-based UIs Query Param <code>/ws/{task_id}?access_token=...</code> Fallback only (less secure) <p>More info: websockets authentication</p>"},{"location":"clients/#managing-clients","title":"\ud83e\uddea Managing Clients","text":"<p>To create or delete clients, use the <code>clients-api</code> token:</p> <ul> <li><code>POST /api/v1/clients</code> \u2014 create new client</li> <li><code>GET /api/v1/clients</code> \u2014 list all clients</li> <li><code>DELETE /api/v1/clients/{client_id}</code> \u2014 remove a client</li> </ul> <p>Only tokens issued for the <code>clients-api</code> audience have access to these routes.</p>"},{"location":"clients/#where-its-used","title":"Where It\u2019s Used","text":"<ul> <li>\ud83d\udd10 The example UI (<code>examples/html/</code>) requires a <code>tasks-api</code> client to authenticate.</li> <li>\ud83d\udd27 Swagger UI supports authentication via the lock icon (<code>/docs</code>).</li> <li>\ud83e\uddea All scripts or test clients should load their credentials from <code>clients.json</code>.</li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#getting-started","title":"Getting Started","text":"<p>Follow these steps to get Waldiez Runner up and running in your development environment.</p>"},{"location":"getting-started/#quickstart-dockerpodman-compose","title":"\ud83d\udc33 Quickstart (Docker/Podman Compose)","text":"<p>To launch the full development stack (API + Redis + Postgres + Nginx):</p> <p>Note</p> <p>This could take some minutes on the first run, as it installs all dependencies.</p> <pre><code>docker compose -f compose.dev.yaml up --build\n</code></pre> <p>This setup includes:</p> <ul> <li>API server (waldiez-runner)</li> <li>Redis + PostgreSQL</li> <li>Taskiq worker + scheduler</li> <li>Nginx reverse proxy</li> <li>A simple static example in <code>examples/html</code></li> </ul> <p>Once started, you can access:</p> <ul> <li>Static example UI: http://localhost</li> <li>API: http://localhost/docs (Swagger UI)</li> </ul> <p> </p> <p>Note</p> <p>Alternatively, you can open this project in VS Code with Dev Containers enabled \u2014 it uses most of the services (not nginx) via .devcontainer/compose.yaml.</p>"},{"location":"getting-started/#authenticating-with-the-api-or-example-ui","title":"\ud83d\udd11 Authenticating with the API or Example UI","text":"<p>When the server starts, it automatically generates a <code>clients.json</code> file in the project root. This file contains two API clients:</p> <ul> <li>One for the <code>clients-api</code> audience (managing clients)</li> <li>One for the <code>tasks-api</code> audience (creating and interacting with tasks)</li> </ul> <p>You'll need the <code>tasks-api</code> credentials to:</p> <ul> <li>Use the Swagger UI (try out endpoints under <code>/api/v1/tasks</code>)</li> <li>Submit tasks via curl or HTTP clients</li> <li>Use the example UI at http://localhost</li> </ul> <p>Info</p> <p>On the example page, you\u2019ll be asked to paste the base URL, client ID, and secret. Use the values from <code>clients.json</code> (specifically the <code>tasks-api</code> entry).</p> <p>\ud83d\udd10 See Clients &amp; Authentication for more details.</p>"},{"location":"getting-started/#local-mode-advanced","title":"\ud83e\uddea Local Mode (Advanced)","text":"<p>You can also run the server without any external dependencies (Redis/Postgres):</p> <ul> <li>SQLite for storage</li> <li>FakeRedis for message streams</li> </ul> <pre><code>make dev-no-reload\n</code></pre> <p>Warning</p> <p>Do expect limitations in this mode, [Fake]Redis messages might not work as expected.</p> <p>Or manually (what <code>make dev-no-reload</code> does):</p> <pre><code># drop all tables and remove the .env file if it exists\npython scripts/drop.py\n# switch to local mode if not already\npython scripts/toggle.py --mode local\n# make sure the .env file is created and the database is initialized\npython scripts/pre_start.py --dev\n# make sure the first two Clients are created\npython scripts/initial_data.py --dev\n# start the server, the broker and the scheduler\npython -m waldiez_runner --trusted-origins http://localhost:3000,http://localhost:8000 --trusted-hosts localhost --debug --no-force-ssl --no-redis --no-postgres --dev --all\n</code></pre> <p>You can now either use the Swagger UI at http://localhost:8000/docs or you can also serve the example on another port terminal:</p> <pre><code>cd examples/plain\npython -m http.server 3000\n</code></pre> <p>Calling <code>python -m http.server</code> will start a simple HTTP server on port 3000, serving the files in the current directory. You can now access the example UI at http://localhost:3000.</p>"},{"location":"getting-started/#submitting-and-managing-tasks","title":"\ud83d\udce4 Submitting and Managing Tasks","text":"<p>Once the server is running, you can create and interact with tasks:</p> <ul> <li>Submit a task by uploading a <code>.waldiez</code> file via:<ul> <li>the example UI at http://localhost</li> <li>or the Swagger UI at http://localhost/docs (<code>POST /api/v1/tasks</code>)</li> </ul> </li> </ul> <ul> <li>Monitor task progress via:<ul> <li>the Swagger <code>GET /api/v1/tasks/{task_id}</code></li> <li>or the WebSocket endpoint <code>/ws/{task_id}</code> (see WebSocket)</li> </ul> </li> </ul> <ul> <li>Send input if the task requests it:<ul> <li>Use the input box in the example UI</li> <li>Or call <code>POST /api/v1/tasks/{task_id}/input</code></li> </ul> </li> </ul> <ul> <li>Cancel or delete tasks using:<ul> <li><code>POST /api/v1/tasks/{task_id}/cancel</code></li> <li><code>DELETE /api/v1/tasks/{task_id}</code></li> </ul> </li> </ul> <p>You can explore all available routes via the interactive API docs at <code>/docs</code>.</p> <p>\ud83d\udd0e For more details, check the Tasks section.</p>"},{"location":"tasks/","title":"Tasks","text":""},{"location":"tasks/#tasks","title":"Tasks","text":"<p>Waldiez Runner provides a set of HTTP endpoints to manage, run, and interact with tasks. All routes are under the /api/v1/tasks path and require a valid JWT token with tasks-api audience.</p>"},{"location":"tasks/#list-all-tasks","title":"\ud83d\udcc4 List All Tasks","text":"<p>GET /api/v1/tasks</p> <p>Returns a paginated list of all tasks for the current client.</p> <p>Query Parameters (optional, for pagination):</p> <ul> <li>page (default: 1)</li> <li>size (default: 50)</li> </ul> <p>Response: Page[TaskResponse]</p>"},{"location":"tasks/#create-a-new-task","title":"\ud83d\udce5 Create a New Task","text":"<p>POST /api/v1/tasks</p> <p>Uploads a .waldiez flow and creates a new task. Limited to 3 concurrent tasks per client.</p> <p>Form Data:</p> <ul> <li>file: The .waldiez file (required)</li> <li>input_timeout: Timeout for input requests (default: 180 seconds)</li> </ul> <p>Response: TaskResponse</p> <p>Error: 429 if the task limit is exceeded.</p>"},{"location":"tasks/#get-task-by-id","title":"\ud83d\udcc4 Get Task by ID","text":"<p>GET /api/v1/tasks/{task_id}</p> <p>Returns metadata about the specified task.</p> <p>Response: TaskResponse</p>"},{"location":"tasks/#send-input-to-task","title":"\ud83c\udfa4 Send Input to Task","text":"<p>POST /api/v1/tasks/{task_id}/input</p> <p>Send a response to an active input_request.</p> <p>Request Body:</p> <pre><code>{\n  \"request_id\": \"uuid-string\",\n  \"data\": \"your input message\"\n}\n</code></pre> <p>Response: 204 No Content</p> <p>Error Conditions:</p> <ul> <li>Invalid task ID or client</li> <li>Task is not waiting for input</li> <li>request_id does not match the active prompt</li> </ul>"},{"location":"tasks/#download-task-results","title":"\u2b07\ufe0f Download Task Results","text":"<p>GET /api/v1/tasks/{task_id}/download</p> <p>Downloads a .zip archive with task outputs.</p> <p>Response: FileResponse or StreamingResponse</p>"},{"location":"tasks/#cancel-task","title":"\ud83d\udeab Cancel Task","text":"<p>POST /api/v1/tasks/{task_id}/cancel</p> <p>Cancels a running or waiting task.</p> <p>Response: Updated TaskResponse</p> <p>Error: 400 if task is already finished or cannot be cancelled</p>"},{"location":"tasks/#delete-a-task","title":"\ud83e\uddf9 Delete a task","text":"<p>DELETE /api/v1/tasks/{task_id}</p> <p>Soft-deletes (schedules full deletion task including all its files and entries in db) a task. Active tasks require force=true to be deleted.</p> <p>Query Parameters:</p> <ul> <li>force: true to delete even active tasks</li> </ul> <p>Response: 204 No Content</p>"},{"location":"tasks/#delete-all-tasks","title":"\ud83e\udde8 Delete All Tasks","text":"<p>DELETE /api/v1/tasks</p> <p>Soft-deletes all tasks for the current client. By default, only completed/cancelled tasks are deleted. Use force=true to delete active ones.</p> <p>Query Parameters:</p> <ul> <li>force: true to also delete active tasks</li> </ul> <p>Response: 204 No Content</p> <p>Warning</p> <ul> <li>Clients can only have up to 3 concurrent active tasks (pending, running, waiting_for_input).</li> <li>Input timeout can be configured per task.</li> <li>Input messages must match the expected request_id.</li> <li>Deleted tasks are soft-deleted and hidden from future listings.</li> </ul> <p>See also:</p> <ul> <li>Authentication</li> <li>Live Input/Output</li> </ul>"},{"location":"websocket/","title":"WebSocket","text":""},{"location":"websocket/#websocket-api","title":"WebSocket API","text":"<p>Waldiez Runner supports live task interaction via WebSocket \u2014 enabling real-time logs, prompts, and input responses.</p>"},{"location":"websocket/#endpoint","title":"\ud83d\udee3\ufe0f Endpoint","text":"<p><code>/ws/{task_id}</code></p> <ul> <li>Requires a valid JWT token with the <code>tasks-api</code> audience</li> <li>Only works while the task is running or waiting for input</li> </ul>"},{"location":"websocket/#authentication-options","title":"\ud83d\udd10 Authentication Options","text":"<p>You can authenticate your WebSocket connection in any of the following ways:</p> Method Example Recommended for Header <code>Authorization: Bearer &lt;token&gt;</code> Python clients Subprotocol <code>task-api,&lt;token&gt;</code> JavaScript clients Cookie <code>access_token=&lt;token&gt;</code> Browser UIs Query Param <code>/ws/{task_id}?access_token=...</code> Fallback only <p>\ud83d\udd10 For info on getting tokens: see Clients &amp; Authentication</p>"},{"location":"websocket/#message-format","title":"\ud83d\udd01 Message Format","text":"<p>All messages are JSON objects with the following schema:</p> <pre><code>{\n  \"type\": \"print | input_request | input_response | termination\",\n  \"task_id\": \"abc123\",\n  \"timestamp\": 1711210101210,\n  \"data\": \"Message string or structured content\",\n  \"request_id\": \"uuid (optional)\",\n  \"password\": \"string (optional, only in input_request)\"\n}\n</code></pre>"},{"location":"websocket/#receiving-messages","title":"\ud83d\udce4 Receiving Messages","text":"<p>You may receive:</p> <ul> <li><code>type: \"print\"</code> \u2192 A log or output line from the task</li> <li><code>type: \"input_request\"</code> \u2192 A prompt requesting user input</li> <li><code>type: \"termination\"</code> \u2192 Signals end of task or current turn</li> </ul>"},{"location":"websocket/#sending-input","title":"\ud83c\udfa4 Sending Input","text":"<p>To respond to a prompt:</p> <pre><code>{\n  \"type\": \"input_response\",\n  \"task_id\": \"abc123\",\n  \"request_id\": \"same-as-request\",\n  \"timestamp\": 1711210111111,\n  \"data\": \"Your input\"\n}\n</code></pre> <p>\ud83e\udde0 <code>request_id</code> must match the one from the latest <code>input_request</code>!</p>"},{"location":"websocket/#use-cases","title":"\u2699\ufe0f Use Cases","text":"<ul> <li>Stream task logs to a UI</li> <li>Handle human-in-the-loop flows</li> <li>Use WebSocket for fast feedback vs polling</li> <li>Match input/output easily using <code>request_id</code></li> </ul>"},{"location":"websocket/#example-ui","title":"\ud83e\uddea Example UI","text":"<p>Try it at http://localhost using the <code>tasks-api</code> credentials from <code>clients.json</code>.</p> <p>See the source in <code>examples/plain/static/js/lib/ws.js</code>.</p>"},{"location":"websocket/#see-also","title":"\ud83d\udcda See Also","text":"<ul> <li>Tasks</li> <li>Clients &amp; Authentication</li> <li>Getting Started</li> </ul>"},{"location":"examples/task_demo/","title":"\ud83c\udf1f Waldiez Runner: Jupyter Notebook Example","text":"In\u00a0[9]: Copied! <pre>import os\nimport sys\nfrom pathlib import Path\n\ntry:\n    from waldiez_runner.client import (\n        TasksClient,\n        TaskStatus,\n        ClientsAdmin,\n        ClientCreateRequest,\n        ClientCreateResponse,\n        TaskCreateRequest,\n        UserInputRequest,\n    )\nexcept ImportError:\n    # Likely running from examples/jupyter \u2014 add project root to path\n    sys.path.append(str(Path(\".\").resolve().parent.parent))\n    from waldiez_runner.client import (\n        TasksClient,\n        TaskStatus,\n        ClientsAdmin,\n        ClientCreateRequest,\n        ClientCreateResponse,\n        TaskCreateRequest,\n        UserInputRequest,\n    )\n\n# Base URL for the API\nBASE_URL = os.environ.get(\"BASE_URL\", \"http://localhost:8000\")\n\n# Auth credentials from env or prompt\n_CLIENT_ID = os.environ.get(\"CLIENT_ID\") or input(\"CLIENT_ID: \")\n_CLIENT_SECRET = os.environ.get(\"CLIENT_SECRET\") or input(\"CLIENT_SECRET: \")\n_AUDIENCE = os.environ.get(\"AUDIENCE\") or input(\"AUDIENCE: \")\nCLIENT_ID = _CLIENT_ID.strip()\nCLIENT_SECRET = _CLIENT_SECRET.strip()\nAUDIENCE = _AUDIENCE.strip()\nos.environ[\"WALDIEZ_CLIENT_ID\"] = CLIENT_ID\nos.environ[\"WALDIEZ_CLIENT_SECRET\"] = CLIENT_SECRET\nos.environ[\"WALDIEZ_AUDIENCE\"] = AUDIENCE\n</pre> import os import sys from pathlib import Path  try:     from waldiez_runner.client import (         TasksClient,         TaskStatus,         ClientsAdmin,         ClientCreateRequest,         ClientCreateResponse,         TaskCreateRequest,         UserInputRequest,     ) except ImportError:     # Likely running from examples/jupyter \u2014 add project root to path     sys.path.append(str(Path(\".\").resolve().parent.parent))     from waldiez_runner.client import (         TasksClient,         TaskStatus,         ClientsAdmin,         ClientCreateRequest,         ClientCreateResponse,         TaskCreateRequest,         UserInputRequest,     )  # Base URL for the API BASE_URL = os.environ.get(\"BASE_URL\", \"http://localhost:8000\")  # Auth credentials from env or prompt _CLIENT_ID = os.environ.get(\"CLIENT_ID\") or input(\"CLIENT_ID: \") _CLIENT_SECRET = os.environ.get(\"CLIENT_SECRET\") or input(\"CLIENT_SECRET: \") _AUDIENCE = os.environ.get(\"AUDIENCE\") or input(\"AUDIENCE: \") CLIENT_ID = _CLIENT_ID.strip() CLIENT_SECRET = _CLIENT_SECRET.strip() AUDIENCE = _AUDIENCE.strip() os.environ[\"WALDIEZ_CLIENT_ID\"] = CLIENT_ID os.environ[\"WALDIEZ_CLIENT_SECRET\"] = CLIENT_SECRET os.environ[\"WALDIEZ_AUDIENCE\"] = AUDIENCE In\u00a0[10]: Copied! <pre># Make sure we have a client with the right audience (tasks-api)\n# if we create a new one, let's delete it at the end\nCREATED_NEW_CLIENT = False\n\nif AUDIENCE == \"clients-api\":\n    admin = ClientsAdmin(\n        on_error=lambda e: print(f\"Error: {e}\"),\n        on_auth_error=lambda e: print(f\"Auth Error: {e}\"),\n        # on_auth_token=lambda token: print(f\"Auth Token: {token}\"),\n    )\n    admin.configure(BASE_URL, CLIENT_ID, CLIENT_SECRET)\n\n    print(\"Creating a new client with tasks-api audience...\")\n    client_create = ClientCreateRequest(\n        # client_id=CLIENT_ID,  # not these, they are existing (for clients-api)\n        # client_secret=CLIENT_SECRET,  # let's let the server generate them\n        audience=\"tasks-api\",\n        description=\"Client for tasks-api\",  # optional\n    )\n    client_info: ClientCreateResponse = admin.create_client(\n        client_data=client_create\n    )\n    TASKS_CLIENT_ID = client_info.client_id\n    TASKS_CLIENT_SECRET = client_info.client_secret\n    CREATED_NEW_CLIENT = True\n    print(\"Created tasks-api client.\")\nelse:\n    TASKS_CLIENT_ID = CLIENT_ID\n    TASKS_CLIENT_SECRET = CLIENT_SECRET\n</pre> # Make sure we have a client with the right audience (tasks-api) # if we create a new one, let's delete it at the end CREATED_NEW_CLIENT = False  if AUDIENCE == \"clients-api\":     admin = ClientsAdmin(         on_error=lambda e: print(f\"Error: {e}\"),         on_auth_error=lambda e: print(f\"Auth Error: {e}\"),         # on_auth_token=lambda token: print(f\"Auth Token: {token}\"),     )     admin.configure(BASE_URL, CLIENT_ID, CLIENT_SECRET)      print(\"Creating a new client with tasks-api audience...\")     client_create = ClientCreateRequest(         # client_id=CLIENT_ID,  # not these, they are existing (for clients-api)         # client_secret=CLIENT_SECRET,  # let's let the server generate them         audience=\"tasks-api\",         description=\"Client for tasks-api\",  # optional     )     client_info: ClientCreateResponse = admin.create_client(         client_data=client_create     )     TASKS_CLIENT_ID = client_info.client_id     TASKS_CLIENT_SECRET = client_info.client_secret     CREATED_NEW_CLIENT = True     print(\"Created tasks-api client.\") else:     TASKS_CLIENT_ID = CLIENT_ID     TASKS_CLIENT_SECRET = CLIENT_SECRET <pre>Creating a new client with tasks-api audience...\nCreated tasks-api client.\n</pre> In\u00a0[11]: Copied! <pre># Now initialize the TasksClient\nclient = TasksClient()\nclient.configure(\n    base_url=BASE_URL,\n    client_id=TASKS_CLIENT_ID,\n    client_secret=TASKS_CLIENT_SECRET,\n    on_auth_token=None,  # we could use a custom handler here\n    on_auth_error=None,  # and here\n    on_error=None,  # and here\n)\nprint(\"Authenticated as tasks-api client.\")\n</pre> # Now initialize the TasksClient client = TasksClient() client.configure(     base_url=BASE_URL,     client_id=TASKS_CLIENT_ID,     client_secret=TASKS_CLIENT_SECRET,     on_auth_token=None,  # we could use a custom handler here     on_auth_error=None,  # and here     on_error=None,  # and here ) print(\"Authenticated as tasks-api client.\") <pre>Authenticated as tasks-api client.\n</pre> In\u00a0[12]: Copied! <pre>current_tasks = client.list_tasks()\nprint(f\"Current tasks: {current_tasks}\")\nfor item in current_tasks.items:\n    if item.status in (\n        TaskStatus.RUNNING,\n        TaskStatus.PENDING,\n        TaskStatus.WAITING_FOR_INPUT,\n    ):\n        # Cancel the task if it's active (running, pending, or waiting for input)\n        print(f\"Cancelling task {item.id} with status {item.status}\")\n        client.cancel_task(item.id)\n</pre> current_tasks = client.list_tasks() print(f\"Current tasks: {current_tasks}\") for item in current_tasks.items:     if item.status in (         TaskStatus.RUNNING,         TaskStatus.PENDING,         TaskStatus.WAITING_FOR_INPUT,     ):         # Cancel the task if it's active (running, pending, or waiting for input)         print(f\"Cancelling task {item.id} with status {item.status}\")         client.cancel_task(item.id) <pre>Current tasks: items=[] total=0 page=1 size=50 pages=0\n</pre> In\u00a0[\u00a0]: Copied! <pre># Upload a .waldiez flow\nFLOW_PATH = os.path.join(\".\", \"..\", \"dummy_with_input.waldiez\")\nwith open(FLOW_PATH, \"rb\") as f:\n    file_data = f.read()\n\ntask_create = TaskCreateRequest(\n    file_data=file_data,\n    file_name=FLOW_PATH.rsplit(\"/\", maxsplit=1)[-1],\n    input_timeout=60,\n)\ntask = client.trigger_task(\n    task_data=task_create,\n)\nprint(\"\ud83d\udce6 Task triggered:\", task.id)\n</pre> # Upload a .waldiez flow FLOW_PATH = os.path.join(\".\", \"..\", \"dummy_with_input.waldiez\") with open(FLOW_PATH, \"rb\") as f:     file_data = f.read()  task_create = TaskCreateRequest(     file_data=file_data,     file_name=FLOW_PATH.rsplit(\"/\", maxsplit=1)[-1],     input_timeout=60, ) task = client.trigger_task(     task_data=task_create, ) print(\"\ud83d\udce6 Task triggered:\", task.id) <pre>\ud83d\udce6 Task created: 019639f3895f430a086fb01da307da1f\n</pre> In\u00a0[14]: Copied! <pre>from queue import Queue\n\nqueue: Queue[str] = Queue()\n\n\ndef on_message(msg: str):\n    print(\"\ud83d\udce5\", msg)\n    queue.put(msg)\n\n\ndef on_error(err: str):\n    print(\"\u274c Error:\", err)\n\n\nclient.start_ws_listener(\n    task_id=task.id, on_message=on_message, on_error=on_error\n)\n</pre> from queue import Queue  queue: Queue[str] = Queue()   def on_message(msg: str):     print(\"\ud83d\udce5\", msg)     queue.put(msg)   def on_error(err: str):     print(\"\u274c Error:\", err)   client.start_ws_listener(     task_id=task.id, on_message=on_message, on_error=on_error ) <pre>\ud83d\udce5 {\"type\":\"status\",\"timestamp\":1744728983959486,\"data\":{\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"status\":\"PENDING\",\"created_at\":\"2025-04-15T14:56:23.903\",\"updated_at\":\"2025-04-15T14:56:23.903\",\"results\":null,\"input_request_id\":null}}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Installing requirements: pyautogen[openai]==0.8.6\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990055849\",\"id\":\"1744728990056-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: pyautogen==0.8.6 in /home/user/.local/lib/python3.12/site-packages (from pyautogen[openai]==0.8.6) (0.8.6)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990542072\",\"id\":\"1744728990542-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: anyio&lt;5.0.0,&gt;=3.0.0 in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (4.9.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990552853\",\"id\":\"1744728990552-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: asyncer==0.0.8 in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.0.8)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990553265\",\"id\":\"1744728990553-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: diskcache in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (5.6.3)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990553794\",\"id\":\"1744728990553-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: docker in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (7.1.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990554188\",\"id\":\"1744728990554-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: httpx&lt;1,&gt;=0.28.1 in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.28.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990554525\",\"id\":\"1744728990554-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: packaging in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (24.2)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990554834\",\"id\":\"1744728990554-2\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: pydantic&lt;3,&gt;=2.6.1 in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2.11.3)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990555141\",\"id\":\"1744728990555-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: python-dotenv in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (1.1.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990555484\",\"id\":\"1744728990555-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: termcolor in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (3.0.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990555844\",\"id\":\"1744728990555-2\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: tiktoken in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.9.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990556130\",\"id\":\"1744728990556-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: openai&gt;=1.66.2 in /home/user/.local/lib/python3.12/site-packages (from pyautogen[openai]==0.8.6) (1.74.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990556894\",\"id\":\"1744728990556-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: idna&gt;=2.8 in /home/user/.local/lib/python3.12/site-packages (from anyio&lt;5.0.0,&gt;=3.0.0-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (3.10)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990558646\",\"id\":\"1744728990558-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: sniffio&gt;=1.1 in /home/user/.local/lib/python3.12/site-packages (from anyio&lt;5.0.0,&gt;=3.0.0-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (1.3.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990558954\",\"id\":\"1744728990559-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: typing_extensions&gt;=4.5 in /home/user/.local/lib/python3.12/site-packages (from anyio&lt;5.0.0,&gt;=3.0.0-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (4.13.2)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990559283\",\"id\":\"1744728990559-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: certifi in /home/user/.local/lib/python3.12/site-packages (from httpx&lt;1,&gt;=0.28.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2025.1.31)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990560086\",\"id\":\"1744728990560-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: httpcore==1.* in /home/user/.local/lib/python3.12/site-packages (from httpx&lt;1,&gt;=0.28.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (1.0.8)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990560330\",\"id\":\"1744728990560-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: h11&lt;0.15,&gt;=0.13 in /home/user/.local/lib/python3.12/site-packages (from httpcore==1.*-&gt;httpx&lt;1,&gt;=0.28.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.14.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990561161\",\"id\":\"1744728990561-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: distro&lt;2,&gt;=1.7.0 in /home/user/.local/lib/python3.12/site-packages (from openai&gt;=1.66.2-&gt;pyautogen[openai]==0.8.6) (1.9.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990562467\",\"id\":\"1744728990562-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: jiter&lt;1,&gt;=0.4.0 in /home/user/.local/lib/python3.12/site-packages (from openai&gt;=1.66.2-&gt;pyautogen[openai]==0.8.6) (0.9.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990562730\",\"id\":\"1744728990562-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: tqdm&gt;4 in /home/user/.local/lib/python3.12/site-packages (from openai&gt;=1.66.2-&gt;pyautogen[openai]==0.8.6) (4.67.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990563023\",\"id\":\"1744728990563-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: annotated-types&gt;=0.6.0 in /home/user/.local/lib/python3.12/site-packages (from pydantic&lt;3,&gt;=2.6.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.7.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990564103\",\"id\":\"1744728990564-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: pydantic-core==2.33.1 in /home/user/.local/lib/python3.12/site-packages (from pydantic&lt;3,&gt;=2.6.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2.33.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990564393\",\"id\":\"1744728990564-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: typing-inspection&gt;=0.4.0 in /home/user/.local/lib/python3.12/site-packages (from pydantic&lt;3,&gt;=2.6.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.4.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990564716\",\"id\":\"1744728990564-2\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: requests&gt;=2.26.0 in /home/user/.local/lib/python3.12/site-packages (from docker-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2.32.3)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990566859\",\"id\":\"1744728990566-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: urllib3&gt;=1.26.0 in /home/user/.local/lib/python3.12/site-packages (from docker-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2.4.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990567114\",\"id\":\"1744728990567-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: regex&gt;=2022.1.18 in /home/user/.local/lib/python3.12/site-packages (from tiktoken-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2024.11.6)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990569077\",\"id\":\"1744728990569-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /home/user/.local/lib/python3.12/site-packages (from requests&gt;=2.26.0-&gt;docker-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (3.4.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990572279\",\"id\":\"1744728990572-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirements installed.\\nNOTE: If new packages were added and you are using Jupyter, you might need to restart the kernel.\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990887280\",\"id\":\"1744728990887-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"&lt;Waldiez&gt; - Starting workflow...\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990921024\",\"id\":\"1744728990921-0\"}\n\ud83d\udce5 {\"type\":\"input_request\",\"data\":\"&gt;\",\"password\":\"False\",\"request_id\":\"8385a114ed0848469b943a3260ab780f\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990930964\",\"id\":\"1744728990931-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Installing requirements: pyautogen[openai]==0.8.6\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990055849\",\"id\":\"1744728990056-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: pyautogen==0.8.6 in /home/user/.local/lib/python3.12/site-packages (from pyautogen[openai]==0.8.6) (0.8.6)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990542072\",\"id\":\"1744728990542-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: anyio&lt;5.0.0,&gt;=3.0.0 in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (4.9.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990552853\",\"id\":\"1744728990552-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: asyncer==0.0.8 in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.0.8)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990553265\",\"id\":\"1744728990553-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: diskcache in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (5.6.3)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990553794\",\"id\":\"1744728990553-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: docker in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (7.1.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990554188\",\"id\":\"1744728990554-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: httpx&lt;1,&gt;=0.28.1 in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.28.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990554525\",\"id\":\"1744728990554-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: packaging in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (24.2)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990554834\",\"id\":\"1744728990554-2\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: pydantic&lt;3,&gt;=2.6.1 in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2.11.3)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990555141\",\"id\":\"1744728990555-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: python-dotenv in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (1.1.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990555484\",\"id\":\"1744728990555-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: termcolor in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (3.0.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990555844\",\"id\":\"1744728990555-2\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: tiktoken in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.9.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990556130\",\"id\":\"1744728990556-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: openai&gt;=1.66.2 in /home/user/.local/lib/python3.12/site-packages (from pyautogen[openai]==0.8.6) (1.74.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990556894\",\"id\":\"1744728990556-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: idna&gt;=2.8 in /home/user/.local/lib/python3.12/site-packages (from anyio&lt;5.0.0,&gt;=3.0.0-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (3.10)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990558646\",\"id\":\"1744728990558-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: sniffio&gt;=1.1 in /home/user/.local/lib/python3.12/site-packages (from anyio&lt;5.0.0,&gt;=3.0.0-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (1.3.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990558954\",\"id\":\"1744728990559-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: typing_extensions&gt;=4.5 in /home/user/.local/lib/python3.12/site-packages (from anyio&lt;5.0.0,&gt;=3.0.0-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (4.13.2)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990559283\",\"id\":\"1744728990559-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: certifi in /home/user/.local/lib/python3.12/site-packages (from httpx&lt;1,&gt;=0.28.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2025.1.31)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990560086\",\"id\":\"1744728990560-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: httpcore==1.* in /home/user/.local/lib/python3.12/site-packages (from httpx&lt;1,&gt;=0.28.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (1.0.8)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990560330\",\"id\":\"1744728990560-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: h11&lt;0.15,&gt;=0.13 in /home/user/.local/lib/python3.12/site-packages (from httpcore==1.*-&gt;httpx&lt;1,&gt;=0.28.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.14.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990561161\",\"id\":\"1744728990561-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: distro&lt;2,&gt;=1.7.0 in /home/user/.local/lib/python3.12/site-packages (from openai&gt;=1.66.2-&gt;pyautogen[openai]==0.8.6) (1.9.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990562467\",\"id\":\"1744728990562-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: jiter&lt;1,&gt;=0.4.0 in /home/user/.local/lib/python3.12/site-packages (from openai&gt;=1.66.2-&gt;pyautogen[openai]==0.8.6) (0.9.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990562730\",\"id\":\"1744728990562-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: tqdm&gt;4 in /home/user/.local/lib/python3.12/site-packages (from openai&gt;=1.66.2-&gt;pyautogen[openai]==0.8.6) (4.67.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990563023\",\"id\":\"1744728990563-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: annotated-types&gt;=0.6.0 in /home/user/.local/lib/python3.12/site-packages (from pydantic&lt;3,&gt;=2.6.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.7.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990564103\",\"id\":\"1744728990564-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: pydantic-core==2.33.1 in /home/user/.local/lib/python3.12/site-packages (from pydantic&lt;3,&gt;=2.6.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2.33.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990564393\",\"id\":\"1744728990564-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: typing-inspection&gt;=0.4.0 in /home/user/.local/lib/python3.12/site-packages (from pydantic&lt;3,&gt;=2.6.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.4.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990564716\",\"id\":\"1744728990564-2\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: requests&gt;=2.26.0 in /home/user/.local/lib/python3.12/site-packages (from docker-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2.32.3)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990566859\",\"id\":\"1744728990566-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: urllib3&gt;=1.26.0 in /home/user/.local/lib/python3.12/site-packages (from docker-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2.4.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990567114\",\"id\":\"1744728990567-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: regex&gt;=2022.1.18 in /home/user/.local/lib/python3.12/site-packages (from tiktoken-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2024.11.6)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990569077\",\"id\":\"1744728990569-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /home/user/.local/lib/python3.12/site-packages (from requests&gt;=2.26.0-&gt;docker-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (3.4.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990572279\",\"id\":\"1744728990572-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirements installed.\\nNOTE: If new packages were added and you are using Jupyter, you might need to restart the kernel.\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990887280\",\"id\":\"1744728990887-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"&lt;Waldiez&gt; - Starting workflow...\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990921024\",\"id\":\"1744728990921-0\"}\n\ud83d\udce5 {\"type\":\"input_request\",\"data\":\"&gt;\",\"password\":\"False\",\"request_id\":\"8385a114ed0848469b943a3260ab780f\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990930964\",\"id\":\"1744728990931-0\"}\n\ud83d\udce5 {\"request_id\":\"8385a114ed0848469b943a3260ab780f\",\"type\":\"input_response\",\"data\":\"Hello world!\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728992178964\",\"id\":\"1744728992179-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"{\\\"type\\\":\\\"text\\\",\\\"content\\\":{\\\"uuid\\\":\\\"b0f054a5-8649-484c-a3d1-01548a3ce1cb\\\",\\\"content\\\":\\\"Hello world!\\\",\\\"sender\\\":\\\"user1\\\",\\\"recipient\\\":\\\"assistant_1a\\\"}}\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728992184167\",\"id\":\"1744728992184-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"{\\\"type\\\":\\\"text\\\",\\\"content\\\":{\\\"uuid\\\":\\\"47c9f445-5224-4f49-af9c-852e5fb33160\\\",\\\"content\\\":\\\"Hello from Assistant 1A\\\",\\\"sender\\\":\\\"assistant_1a\\\",\\\"recipient\\\":\\\"user1\\\"}}\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728992193500\",\"id\":\"1744728992193-0\"}\n\ud83d\udce5 {\"type\":\"input_request\",\"data\":\"Replying as user1. Provide feedback to assistant_1a. Press enter to skip and use auto-reply, or type 'exit' to end the conversation: \",\"password\":\"False\",\"request_id\":\"826490a32d9e42509bdf5081d48284c5\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728992194195\",\"id\":\"1744728992194-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Installing requirements: pyautogen[openai]==0.8.6\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990055849\",\"id\":\"1744728990056-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: pyautogen==0.8.6 in /home/user/.local/lib/python3.12/site-packages (from pyautogen[openai]==0.8.6) (0.8.6)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990542072\",\"id\":\"1744728990542-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: anyio&lt;5.0.0,&gt;=3.0.0 in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (4.9.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990552853\",\"id\":\"1744728990552-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: asyncer==0.0.8 in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.0.8)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990553265\",\"id\":\"1744728990553-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: diskcache in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (5.6.3)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990553794\",\"id\":\"1744728990553-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: docker in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (7.1.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990554188\",\"id\":\"1744728990554-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: httpx&lt;1,&gt;=0.28.1 in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.28.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990554525\",\"id\":\"1744728990554-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: packaging in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (24.2)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990554834\",\"id\":\"1744728990554-2\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: pydantic&lt;3,&gt;=2.6.1 in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2.11.3)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990555141\",\"id\":\"1744728990555-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: python-dotenv in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (1.1.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990555484\",\"id\":\"1744728990555-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: termcolor in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (3.0.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990555844\",\"id\":\"1744728990555-2\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: tiktoken in /home/user/.local/lib/python3.12/site-packages (from pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.9.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990556130\",\"id\":\"1744728990556-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: openai&gt;=1.66.2 in /home/user/.local/lib/python3.12/site-packages (from pyautogen[openai]==0.8.6) (1.74.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990556894\",\"id\":\"1744728990556-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: idna&gt;=2.8 in /home/user/.local/lib/python3.12/site-packages (from anyio&lt;5.0.0,&gt;=3.0.0-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (3.10)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990558646\",\"id\":\"1744728990558-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: sniffio&gt;=1.1 in /home/user/.local/lib/python3.12/site-packages (from anyio&lt;5.0.0,&gt;=3.0.0-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (1.3.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990558954\",\"id\":\"1744728990559-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: typing_extensions&gt;=4.5 in /home/user/.local/lib/python3.12/site-packages (from anyio&lt;5.0.0,&gt;=3.0.0-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (4.13.2)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990559283\",\"id\":\"1744728990559-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: certifi in /home/user/.local/lib/python3.12/site-packages (from httpx&lt;1,&gt;=0.28.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2025.1.31)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990560086\",\"id\":\"1744728990560-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: httpcore==1.* in /home/user/.local/lib/python3.12/site-packages (from httpx&lt;1,&gt;=0.28.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (1.0.8)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990560330\",\"id\":\"1744728990560-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: h11&lt;0.15,&gt;=0.13 in /home/user/.local/lib/python3.12/site-packages (from httpcore==1.*-&gt;httpx&lt;1,&gt;=0.28.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.14.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990561161\",\"id\":\"1744728990561-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: distro&lt;2,&gt;=1.7.0 in /home/user/.local/lib/python3.12/site-packages (from openai&gt;=1.66.2-&gt;pyautogen[openai]==0.8.6) (1.9.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990562467\",\"id\":\"1744728990562-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: jiter&lt;1,&gt;=0.4.0 in /home/user/.local/lib/python3.12/site-packages (from openai&gt;=1.66.2-&gt;pyautogen[openai]==0.8.6) (0.9.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990562730\",\"id\":\"1744728990562-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: tqdm&gt;4 in /home/user/.local/lib/python3.12/site-packages (from openai&gt;=1.66.2-&gt;pyautogen[openai]==0.8.6) (4.67.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990563023\",\"id\":\"1744728990563-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: annotated-types&gt;=0.6.0 in /home/user/.local/lib/python3.12/site-packages (from pydantic&lt;3,&gt;=2.6.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.7.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990564103\",\"id\":\"1744728990564-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: pydantic-core==2.33.1 in /home/user/.local/lib/python3.12/site-packages (from pydantic&lt;3,&gt;=2.6.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2.33.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990564393\",\"id\":\"1744728990564-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: typing-inspection&gt;=0.4.0 in /home/user/.local/lib/python3.12/site-packages (from pydantic&lt;3,&gt;=2.6.1-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (0.4.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990564716\",\"id\":\"1744728990564-2\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: requests&gt;=2.26.0 in /home/user/.local/lib/python3.12/site-packages (from docker-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2.32.3)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990566859\",\"id\":\"1744728990566-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: urllib3&gt;=1.26.0 in /home/user/.local/lib/python3.12/site-packages (from docker-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2.4.0)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990567114\",\"id\":\"1744728990567-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: regex&gt;=2022.1.18 in /home/user/.local/lib/python3.12/site-packages (from tiktoken-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (2024.11.6)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990569077\",\"id\":\"1744728990569-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /home/user/.local/lib/python3.12/site-packages (from requests&gt;=2.26.0-&gt;docker-&gt;pyautogen==0.8.6-&gt;pyautogen[openai]==0.8.6) (3.4.1)\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990572279\",\"id\":\"1744728990572-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Requirements installed.\\nNOTE: If new packages were added and you are using Jupyter, you might need to restart the kernel.\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990887280\",\"id\":\"1744728990887-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"&lt;Waldiez&gt; - Starting workflow...\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990921024\",\"id\":\"1744728990921-0\"}\n\ud83d\udce5 {\"type\":\"input_request\",\"data\":\"&gt;\",\"password\":\"False\",\"request_id\":\"8385a114ed0848469b943a3260ab780f\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728990930964\",\"id\":\"1744728990931-0\"}\n\ud83d\udce5 {\"request_id\":\"8385a114ed0848469b943a3260ab780f\",\"type\":\"input_response\",\"data\":\"Hello world!\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728992178964\",\"id\":\"1744728992179-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"{\\\"type\\\":\\\"text\\\",\\\"content\\\":{\\\"uuid\\\":\\\"b0f054a5-8649-484c-a3d1-01548a3ce1cb\\\",\\\"content\\\":\\\"Hello world!\\\",\\\"sender\\\":\\\"user1\\\",\\\"recipient\\\":\\\"assistant_1a\\\"}}\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728992184167\",\"id\":\"1744728992184-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"{\\\"type\\\":\\\"text\\\",\\\"content\\\":{\\\"uuid\\\":\\\"47c9f445-5224-4f49-af9c-852e5fb33160\\\",\\\"content\\\":\\\"Hello from Assistant 1A\\\",\\\"sender\\\":\\\"assistant_1a\\\",\\\"recipient\\\":\\\"user1\\\"}}\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728992193500\",\"id\":\"1744728992193-0\"}\n\ud83d\udce5 {\"type\":\"input_request\",\"data\":\"Replying as user1. Provide feedback to assistant_1a. Press enter to skip and use auto-reply, or type 'exit' to end the conversation: \",\"password\":\"False\",\"request_id\":\"826490a32d9e42509bdf5081d48284c5\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728992194195\",\"id\":\"1744728992194-0\"}\n\ud83d\udce5 {\"request_id\":\"826490a32d9e42509bdf5081d48284c5\",\"type\":\"input_response\",\"data\":\"Hello world!\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728994170524\",\"id\":\"1744728994170-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"{\\\"type\\\":\\\"text\\\",\\\"content\\\":{\\\"uuid\\\":\\\"a7fc244d-f1ea-4ca5-9b24-c3bae9f6a289\\\",\\\"content\\\":\\\"Hello world!\\\",\\\"sender\\\":\\\"user1\\\",\\\"recipient\\\":\\\"assistant_1a\\\"}}\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728994177939\",\"id\":\"1744728994178-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"{\\\"type\\\":\\\"text\\\",\\\"content\\\":{\\\"uuid\\\":\\\"70f9a7d2-df1f-4fe6-a44c-2d083484c0f2\\\",\\\"content\\\":\\\"Hello from Assistant 1A\\\",\\\"sender\\\":\\\"assistant_1a\\\",\\\"recipient\\\":\\\"user1\\\"}}\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728994185990\",\"id\":\"1744728994186-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"{\\\"type\\\":\\\"termination\\\",\\\"content\\\":{\\\"uuid\\\":\\\"4f903fbd-6c08-43e4-a9ae-a0b879947614\\\",\\\"termination_reason\\\":\\\"Maximum turns (2) reached\\\"}}\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728994186574\",\"id\":\"1744728994186-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"&lt;Waldiez&gt; - Workflow finished\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728994189983\",\"id\":\"1744728994190-0\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Generating mermaid sequence diagram...\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728994190534\",\"id\":\"1744728994190-1\"}\n\ud83d\udce5 {\"type\":\"print\",\"data\":\"Copying the results to /tmp/tmpo3mjmb6b/019639f3883389a81a44eaafc0f70376/019639f3895f430a086fb01da307da1f/app/waldiez_out/20250415145634\\n\",\"task_id\":\"019639f3895f430a086fb01da307da1f\",\"timestamp\":\"1744728994194038\",\"id\":\"1744728994194-0\"}\n</pre> <pre>WebSocket Error (sync): did not receive a valid HTTP response, reconnecting in 2 seconds...\nWebSocket Error (sync): [Errno 61] Connection refused, reconnecting in 4 seconds...\nWebSocket Error (sync): [Errno 61] Connection refused, reconnecting in 8 seconds...\nWebSocket Error (sync): [Errno 61] Connection refused, reconnecting in 16 seconds...\nWebSocket Error (sync): [Errno 61] Connection refused, reconnecting in 30 seconds...\nStopping listener due to stop event.\n</pre> <pre>\u274c Error: [Errno 61] Connection refused\n</pre> In\u00a0[15]: Copied! <pre>def send_input(request_id: str, data: str):\n    input_msg = UserInputRequest(\n        task_id=task.id,\n        request_id=request_id,\n        data=data,\n    )\n    # alternatively, as plain dict:\n    # input_msg = {\n    #     \"task_id\": task.id,\n    #     \"request_id\": request_id,\n    #     \"data\": data,\n    # }\n    client.send_user_input(request_data=input_msg)\n</pre> def send_input(request_id: str, data: str):     input_msg = UserInputRequest(         task_id=task.id,         request_id=request_id,         data=data,     )     # alternatively, as plain dict:     # input_msg = {     #     \"task_id\": task.id,     #     \"request_id\": request_id,     #     \"data\": data,     # }     client.send_user_input(request_data=input_msg) In\u00a0[16]: Copied! <pre>import time\n\nwhile True:\n    current = client.get_task_status(task_id=task.id)\n    if current.status in (\n        TaskStatus.COMPLETED,\n        TaskStatus.FAILED,\n        TaskStatus.CANCELLED,\n    ):\n        print(\"Finished:\", current.status)\n        break\n    print(\"\u23f3 Status:\", current.status)\n    if current.status == TaskStatus.WAITING_FOR_INPUT:\n        send_input(request_id=current.input_request_id, data=\"Hello world!\")\n    time.sleep(2)\n\nzip_data = client.download_task_results(task_id=task.id)\nwith open(\"results.zip\", \"wb\") as f:\n    f.write(zip_data)\nprint(\"\ud83d\udcc1 Results saved to results.zip\")\n</pre> import time  while True:     current = client.get_task_status(task_id=task.id)     if current.status in (         TaskStatus.COMPLETED,         TaskStatus.FAILED,         TaskStatus.CANCELLED,     ):         print(\"Finished:\", current.status)         break     print(\"\u23f3 Status:\", current.status)     if current.status == TaskStatus.WAITING_FOR_INPUT:         send_input(request_id=current.input_request_id, data=\"Hello world!\")     time.sleep(2)  zip_data = client.download_task_results(task_id=task.id) with open(\"results.zip\", \"wb\") as f:     f.write(zip_data) print(\"\ud83d\udcc1 Results saved to results.zip\") <pre>\u23f3 Status: TaskStatus.PENDING\n\u23f3 Status: TaskStatus.PENDING\n\u23f3 Status: TaskStatus.PENDING\n\u23f3 Status: TaskStatus.PENDING\n\u23f3 Status: TaskStatus.WAITING_FOR_INPUT\n\u23f3 Status: TaskStatus.WAITING_FOR_INPUT\nFinished: TaskStatus.COMPLETED\n\ud83d\udcc1 Results saved to results.zip\n</pre> In\u00a0[17]: Copied! <pre>import os\nimport zipfile\n\n# Unzip the results\nwith zipfile.ZipFile(\"results.zip\", \"r\") as zip_ref:\n    zip_ref.extractall(\"results\")\nprint(\"\ud83d\udcc2 Unzipped results to results\")\nfor root, dirs, files in os.walk(\"results\"):\n    for file in files:\n        print(f\"\ud83d\udcc4 {file}\")\n</pre> import os import zipfile  # Unzip the results with zipfile.ZipFile(\"results.zip\", \"r\") as zip_ref:     zip_ref.extractall(\"results\") print(\"\ud83d\udcc2 Unzipped results to results\") for root, dirs, files in os.walk(\"results\"):     for file in files:         print(f\"\ud83d\udcc4 {file}\") <pre>\ud83d\udcc2 Unzipped results to results\n\ud83d\udcc4 dummy_with_input.waldiez\n\ud83d\udcc4 waldiez_flow_api_keys.py\n\ud83d\udcc4 dummy_with_input.py\n\ud83d\udcc4 Waldiez flow.mmd\n\ud83d\udcc4 flow.db\n\ud83d\udcc4 oai_wrappers.csv\n\ud83d\udcc4 oai_clients.csv\n\ud83d\udcc4 version.json\n\ud83d\udcc4 function_calls.csv\n\ud83d\udcc4 events.json\n\ud83d\udcc4 chat_completions.json\n\ud83d\udcc4 version.csv\n\ud83d\udcc4 agents.json\n\ud83d\udcc4 function_calls.json\n\ud83d\udcc4 oai_wrappers.json\n\ud83d\udcc4 oai_clients.json\n\ud83d\udcc4 chat_completions.csv\n\ud83d\udcc4 agents.csv\n\ud83d\udcc4 events.csv\n</pre> In\u00a0[18]: Copied! <pre>import shutil\nimport os\n\n# Clean up the results\nif os.path.exists(\"results\"):\n    shutil.rmtree(\"results\")\n    print(\"\ud83d\uddd1\ufe0f Deleted results directory.\")\n\nif os.path.exists(\"results.zip\"):\n    os.remove(\"results.zip\")\n    print(\"\ud83d\uddd1\ufe0f Deleted results.zip\")\n\nif CREATED_NEW_CLIENT:\n    clients_admin = ClientsAdmin()\n    clients_admin.configure(BASE_URL, CLIENT_ID, CLIENT_SECRET)\n    clients_admin.delete_client(client_id=TASKS_CLIENT_ID)\n    print(\"\ud83d\uddd1\ufe0f Deleted tasks-api client.\")\n\nos.environ.pop(\"WALDIEZ_CLIENT_ID\", None)\nos.environ.pop(\"WALDIEZ_CLIENT_SECRET\", None)\nos.environ.pop(\"WALDIEZ_AUDIENCE\", None)\nprint(\"\ud83d\uddd1\ufe0f Deleted environment variables.\")\n</pre> import shutil import os  # Clean up the results if os.path.exists(\"results\"):     shutil.rmtree(\"results\")     print(\"\ud83d\uddd1\ufe0f Deleted results directory.\")  if os.path.exists(\"results.zip\"):     os.remove(\"results.zip\")     print(\"\ud83d\uddd1\ufe0f Deleted results.zip\")  if CREATED_NEW_CLIENT:     clients_admin = ClientsAdmin()     clients_admin.configure(BASE_URL, CLIENT_ID, CLIENT_SECRET)     clients_admin.delete_client(client_id=TASKS_CLIENT_ID)     print(\"\ud83d\uddd1\ufe0f Deleted tasks-api client.\")  os.environ.pop(\"WALDIEZ_CLIENT_ID\", None) os.environ.pop(\"WALDIEZ_CLIENT_SECRET\", None) os.environ.pop(\"WALDIEZ_AUDIENCE\", None) print(\"\ud83d\uddd1\ufe0f Deleted environment variables.\") <pre>\ud83d\uddd1\ufe0f Deleted results directory.\n\ud83d\uddd1\ufe0f Deleted results.zip\n\ud83d\uddd1\ufe0f Deleted tasks-api client.\n\ud83d\uddd1\ufe0f Deleted environment variables.\n</pre>"},{"location":"examples/task_demo/#waldiez-runner-jupyter-notebook-example","title":"\ud83c\udf1f Waldiez Runner: Jupyter Notebook Example\u00b6","text":"<p>This notebook demonstrates how to interact with the Waldiez Runner server using the client SDK. It covers:</p> <ul> <li>Authentication (via <code>clients-api</code> or <code>tasks-api</code>)</li> <li>Creating and managing tasks</li> <li>Listening to task output via WebSocket</li> <li>Sending input to running tasks</li> <li>Downloading results</li> </ul>"},{"location":"examples/task_demo/#authentication","title":"\ud83d\udd10 Authentication\u00b6","text":""},{"location":"examples/task_demo/#cancel-any-existing-running-tasks-if-any","title":"\ud83d\udeab Cancel any existing running tasks if any\u00b6","text":""},{"location":"examples/task_demo/#submit-a-new-task","title":"\ud83d\udce5 Submit a New Task\u00b6","text":""},{"location":"examples/task_demo/#listen-to-task-output","title":"\ud83d\udce1 Listen to Task Output\u00b6","text":""},{"location":"examples/task_demo/#send-input-if-prompted","title":"\ud83c\udfa4 Send Input (if prompted)\u00b6","text":""},{"location":"examples/task_demo/#wait-for-completion-and-download-results","title":"\u23f3 Wait for Completion and Download Results\u00b6","text":""},{"location":"examples/task_demo/#cleanup","title":"\ud83d\uddd1\ufe0f Cleanup\u00b6","text":""}]}