---
volumes:
  runner-postgres-data:
  runner-redis-data:
  vscode-dot-local:

x-podman:
  in_pod: false

x-logging: &common-logging
  options:
    max-size: '50m'
    max-file: '10'
  driver: 'json-file'

x-healthcheck: &common-healthcheck
  interval: 60s
  timeout: 10s
  retries: 10
  start_period: 30s

services:

  db:
    container_name: runner-db
    hostname: db
    image: postgres:latest
    restart: unless-stopped
    init: true
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-db_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-db_password}
      POSTGRES_DB: ${POSTGRES_DB:-db_name}
      PGDATA: /var/lib/postgresql/data
      PGPORT: '${PGPORT:-5432}'
    ports:
      - "${PGPORT:-5432}:${PGPORT:-5432}"
    volumes:
      - runner-postgres-data:/var/lib/postgresql/data
    healthcheck:
      <<: *common-healthcheck
      test:
        ['CMD', 'pg_isready', '-U', '${POSTGRES_USER:-db_user}', '-d', '${POSTGRES_DB:-db_name}', '-p', '${PGPORT:-5432}']
    logging: *common-logging

  redis:
    hostname: redis
    container_name: runner-redis
    image: redis:latest
    restart: unless-stopped
    init: true
    ports:
      - "${REDIS_PORT:-6379}:${REDIS_PORT:-6379}"
    environment:
      REDIS_PORT: '${REDIS_PORT:-6379}'
      REDIS_PASSWORD: '${REDIS_PASSWORD:-redis_password}'
    command:
      - /bin/sh
      - -c
      - >
        if [ ! -z "${REDIS_PASSWORD:-redis_password}" ]; then
          redis-server --port ${REDIS_PORT:-6379} --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
        else
          redis-server --port ${REDIS_PORT:-6379} --appendonly yes
        fi
    volumes:
      - runner-redis-data:/data
    healthcheck:
      <<: *common-healthcheck
      # noinspection ComposeUnknownValues
      test:
        - CMD-SHELL
        - >
          if [ ! -z "${REDIS_PASSWORD:-redis_password}" ]; then
            redis-cli -p ${REDIS_PORT:-6379} -a "${REDIS_PASSWORD:-redis_password}" ping
          else
            redis-cli -p ${REDIS_PORT:-6379} ping
          fi
    logging: *common-logging
  runner:
    container_name: runner
    build:
      context: ..
      dockerfile: .devcontainer/Containerfile
    volumes:
      - ..:/home/vscode/workspace:cached,z
      - vscode-dot-local:/home/vscode/.local:cached,z
    command: sleep infinity
    userns_mode: "keep-id:uid=1000,gid=1000"
    environment:
      - WALDIEZ_RUNNER_FLOW=
      - WALDIEZ_RUNNER_HOST=0.0.0.0
      - WALDIEZ_RUNNER_PORT=${WALDIEZ_RUNNER_PORT:-8000}
      - WALDIEZ_RUNNER_DOMAIN_NAME=localhost
      - WALDIEZ_RUNNER_FORCE_SSL=False
      - WALDIEZ_RUNNER_TRUSTED_HOSTS=localhost
      - WALDIEZ_RUNNER_TRUSTED_ORIGINS=
      - WALDIEZ_RUNNER_TRUSTED_ORIGIN_REGEX=
      - WALDIEZ_RUNNER_POSTGRES=True
      - WALDIEZ_RUNNER_DB_HOST=db
      - WALDIEZ_RUNNER_DB_PORT=${PGPORT:-5432}
      - WALDIEZ_RUNNER_DB_USER=${POSTGRES_USER:-db_user}
      - WALDIEZ_RUNNER_DB_PASSWORD=${POSTGRES_PASSWORD:-db_password}
      - WALDIEZ_RUNNER_DB_NAME=${POSTGRES_DB:-db_name}
      - WALDIEZ_RUNNER_DB_URL=
      - WALDIEZ_RUNNER_REDIS=True
      - WALDIEZ_RUNNER_REDIS_HOST=redis
      - WALDIEZ_RUNNER_REDIS_PORT=${REDIS_PORT:-6379}
      - WALDIEZ_RUNNER_REDIS_DB=0
      - WALDIEZ_RUNNER_REDIS_SCHEME=redis
      - WALDIEZ_RUNNER_REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - WALDIEZ_RUNNER_REDIS_URL=
      - WALDIEZ_RUNNER_SECRET_KEY=REPLACE_ME
    user: vscode
    ports:
      - "${WALDIEZ_RUNNER_PORT:-8000}:${WALDIEZ_RUNNER_PORT:-8000}"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      <<: *common-healthcheck
      # noinspection ComposeUnknownValues
      test:
        - CMD
        - curl
        - --fail
        - --silent
        - --show-error
        - http://localhost:${WALDIEZ_RUNNER_PORT:-8000}/health
    logging: *common-logging
