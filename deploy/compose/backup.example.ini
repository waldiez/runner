# ============================================================================
# Backup Configuration Example
# ============================================================================
# Copy this file to backup.ini and customize for your environment.
# Environment variables can override certain settings (see comments below).

[backup]
# Backup identifier/name
name = waldiez_runner

# Local directory where backups are stored before transport
backup_dir = ./.local/backups

# Number of backups to retain (minimum: 1)
retention = 7

# Generate checksums (SHA256) for backup archives
generate_checksum = true

# Dry run mode - log actions without executing them
dry_run = false

# What to back up: files | postgres | redis | all
only = all

# ----------------------------------------------------------------------------
# Webhook for notification on success/failure
# ----------------------------------------------------------------------------
[notify]
webhook_url =
# e.g. X-Auth: ${WEBHOOK_TOKEN}, Authorization: 'Bearer ${WEBHOOK_TOKEN}'
headers =
notify_on_success = false
notify_on_failure = true

# ----------------------------------------------------------------------------
# Container Runtime
# ----------------------------------------------------------------------------
[runtime]
# Container engine to use: auto | docker | podman | none
# 'auto' tries podman first, then docker
container_command = auto

# ----------------------------------------------------------------------------
# Transport Configuration
# ----------------------------------------------------------------------------
[transport]
# Where to send backups: s3 | ssh | both | none
type = none

# S3 sync mode: retain | mirror
# - retain: keeps all backups on S3
# - mirror: deletes S3 files not present locally (respects retention)
mode = retain

# S3 Transport (required if type = s3 or both)
[transport.s3]
bucket = my-backup-bucket
prefix = backups/waldiez_runner
aws_profile = default
aws_region = us-east-1
# Optional: comma-separated tags like "Environment=prod,Project=waldiez"
object_tags =

# SSH Transport (required if type = ssh or both)
[transport.ssh]
# Format: user@host:/remote/path
dest = backup-user@backup.example.com:/backups/waldiez
port = 22
rsync_opts = -az --partial --inplace
# Optional: command to run on remote to prune old backups
prune_cmd =

# ----------------------------------------------------------------------------
# File Sources
# ----------------------------------------------------------------------------
# Define file/directory sets to back up
# Section format: [files:name]
[files:container_data]
mode = container
container = waldiez-runner-dev
# path in container
path = /home/waldiez/app/waldiez_runner
# Optional: comma-or newline-separated exclude patterns
exclude =
    *.log
    *.tmp
    __pycache__/
    .venv/
    .local/
    *cache/

# Example: Container volume backup
# for redis, we probably don't need all /data,
# see redis below to only get dump.rdb
; [files:redis_data]
; mode = container
; container = waldiez-runner-redis-dev
; path = /data
; exclude = dump.rdb, *.rdb, appendonly.aof*, *.aof

# ----------------------------------------------------------------------------
# PostgreSQL Sources
# ----------------------------------------------------------------------------
# Section format: [postgres:name]
# Passwords can be set via PG_PASSWORD_{NAME} environment variable
# where {NAME} is the section name in uppercase

[postgres:main]
container = waldiez-runner-db-dev
user = db_user
database = db_name
# Password in ini (or use env var PG_PASSWORD_MAIN)
password = db_password
# Optional: additional pg_dump flags
dump_extras = --no-owner --no-acl

# ----------------------------------------------------------------------------
# Redis Sources
# ----------------------------------------------------------------------------
# Section format: [redis:name]
# Passwords can be set via REDIS_PASSWORD_{NAME} environment variable

[redis:cache]
container = waldiez-runner-redis-dev
# Password in ini (or use env var REDIS_PASSWORD_CACHE)
password = redis_password
# RDB filename inside container
rdb_name = dump.rdb
